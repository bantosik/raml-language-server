#%RAML 1.0 Library
uses:
  traits: traits.raml
  resources: dataTypes/resources.raml
  bundles: dataTypes/bundles.raml
resourceTypes:
  fhirCompartment:
    get:
      is: [traits.search]
      responses:
        200:
          body:
            application/json:
              type: <<resourcePathName>>Bundle
  fhirHistory:
    get:
      description: The history interaction retrieves the history of either a particular resource or all resources of a given type.
      is: [traits.history: { bundleName: <<bundleName>>}]
  fhirResource:
    get:
      description: The read interaction accesses the current contents of a resource.
      is: [traits.read]
      responses:
        200:
          body:
            application/json:
              type: resources.<<resourcePathName>>
              example: <<getSingleExample>>
    put:
      description: The update interaction creates a new current version for an existing resource or creates an initial version if no resource already exists for the given id.
      is: [traits.update]
      body:
        application/json:
          type: resources.<<resourcePathName>>
          example: <<putExample>>
    delete:
      description: The delete interaction removes an existing resource.
      is: [traits.delete]
  fhirResourceType:
    post:
      description: |
        The create interaction creates a new resource in a server-assigned location.
        If the client wishes to have control over the id of a newly submitted resource, it should use the update interaction instead.
      is: [traits.create]
      headers:
        If-None-Exist:
          required: false
          description: name=value selective criteria
      body:
        application/json:
          type: resources.<<resourcePathName>>
          example: <<postExample>>
      responses:
        200:
          description: No match, resource created.
        412:
          description: Precondition Failed error indicating the client's criteria were not selective enough.
    get:
      description: This interaction searches a set of resources based on some filter criteria.
      is: [traits.search]
      responses:
        200:
          body:
            application/json:
              type: bundles.<<resourcePathName>>Bundle
              example: <<getExample>>
    put:
      description: The conditional update interaction allows a client to update an existing resource based on some identification criteria, rather than by logical id.
      is: [traits.update, traits.conditionalOperation]
      queryParameters:
      responses:
        412:
          description: |
            Precondition Failed error indicating the client's criteria were not selective enough
    delete:
      description: The conditional delete interaction allows a client to delete an existing resource based on some selection criteria, rather than by a specific logical id.
      is: [traits.delete, traits.conditionalOperation]
      queryParameters:
      responses:
        404:
          description: Not found
        412:
          description: Precondition Failed error indicating the client's criteria were not selective enough.
  fhirSearch:
    post:
      description: This interaction searches a set of resources based on some filter criteria.
      body:
        application/x-www-form-urlencoded:
          properties: !include queryParams/searchParams.yaml
      responses:
        200:
          body:
            application/json:
              type: bundles.<<bundleName>>
    get:
      description: This interaction searches a set of resources based on some filter criteria.
    #  is: [{search: { bundleName: <<bundleName>>}}]
    #  is: [search]
      responses:
        200:
          body:
            application/json:
              type: bundles.<<bundleName>>
  fhirVersionedResource:
    get:
      description: The vread interaction preforms a version specific read of the resource.
      is: [traits.vread: { resourceName: <<resourceName>> }]
